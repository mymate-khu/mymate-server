name: Deploy

on:
  pull_request:
    branches: [ release ]
    types: [ closed ]

jobs:
  build-docker-image:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Build with Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Sign in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/tourapi:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/tourapi:latest

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: [ self-hosted ]

    steps:
      # (필수) compose 파일 존재 체크
      - name: Check compose file exists
        run: test -f /home/ubuntu/docker-compose.yml || (echo "❌ /home/ubuntu/docker-compose.yml not found" && exit 1)

      # 🔐 시크릿에서 멀티라인 .env 복원
      - name: Write .env file from secret
        run: |
          sudo mkdir -p /home/ubuntu
          printf '%s' "${{ secrets.ENV_PROD }}" | sudo tee /home/ubuntu/.env > /dev/null
          sudo chmod 600 /home/ubuntu/.env

      - name: Compose down
        working-directory: /home/ubuntu
        run: sudo docker compose --env-file .env down || true

      - name: Pull new image
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tourapi:latest

      - name: Compose up
        working-directory: /home/ubuntu
        run: sudo docker compose --env-file .env up -d --remove-orphans

      - name: Prune old images
        run: sudo docker system prune -f
